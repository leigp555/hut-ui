import{_ as e,P as t,T as n,g as a,D as l,C as o,a as u}from"./DemoDisplay-d14d3ff9.js";import{e as s,_ as r}from"./Paragraph.vue_vue_type_style_index_0_lang-1a82c502.js";import{d as i,k as p,r as c,z as m,o as v,c as d,b as _,G as f,l as h,t as g,x,g as I,w as b,e as w,h as y,A as z,_ as T}from"./index-54c84176.js";/* empty css                                                */import{_ as B}from"./ApiIntro-50aaf7d6.js";const C={class:"ui-textarea-label"},S=["placeholder","value","maxlength"],A={key:0,class:"ui-count"},D=i({inheritAttrs:!1,__name:"Textarea",props:{value:{default:""},placeholder:{default:""},autoSize:{type:[Boolean,Object],default:!1},resize:{type:Boolean,default:!1},maxlength:null,showCount:{type:Boolean,default:!1}},emits:["update:value"],setup(e,{emit:t}){const n=e,{value:a,autoSize:l,resize:o,maxlength:u}=p(n),s=c(null),r=()=>{const e=s.value;if(e){if(l.value&&"boolean"==typeof l.value){const t=e.scrollHeight;e.style.height=`${t+2}px`}else if(l.value){const{height:t}=e.getBoundingClientRect(),n=e.scrollHeight;n>t-2&&n<1.5*l.value.maxRows*14+10?e.style.height=`${n+2}px`:n>1.5*l.value.maxRows*14+10&&(e.style.height=1.5*l.value.maxRows*14+10+"px")}t("update:value",e.value)}},i=m((()=>l&&"boolean"!=typeof l.value?{minHeight:1.5*l.value.minRows*14+10+"px",resize:o.value?"both":"none"}:{resize:o.value?"both":"none"})),I=m((()=>`${a.value.length} / ${null==u?void 0:u.value}`));return(t,n)=>(v(),d("label",C,[_("textarea",f({class:"ui-textarea"},t.$attrs,{placeholder:e.placeholder,value:h(a),style:h(i),maxlength:h(u),ref_key:"textareaRef",ref:s,onInput:r}),null,16,S),e.showCount?(v(),d("span",A,g(h(I)),1)):x("",!0)]))}}),R=_("p",null,"通过鼠标或键盘输入内容，是最基础的表单域的包装。",-1),U=_("ul",null,[_("li",null,"Input: 主要组件"),_("li",null,"InputIcon:子组件。")],-1),j=_("ul",null,[_("li",null,"需要用户输入表单域内容时。"),_("li",null,"提供组合型输入框，带搜索的输入框，还可以进行大小选择。")],-1),k=i({__name:"Intro",setup:a=>(a,l)=>(v(),I(h(n),null,{default:b((()=>[w(h(e),null,{default:b((()=>[y("简介")])),_:1}),w(h(t),null,{default:b((()=>[R])),_:1}),w(h(e),null,{default:b((()=>[y("组件概览")])),_:1}),w(h(t),null,{default:b((()=>[U])),_:1}),w(h(e),null,{default:b((()=>[y("使用场景")])),_:1}),w(h(t),null,{default:b((()=>[j])),_:1})])),_:1}))}),$=i({__name:"Api",setup(e){const t=[],n=[{componentName:"Input",attrContent:[{rowIndex:1,"属性":"value","说明":"输入框内容","类型":"string","默认值":""},{rowIndex:2,"属性":"placeholder","说明":"输入框占位","类型":"string","默认值":""},{rowIndex:3,"属性":"type","说明":"输入框类型","类型":"'password' | 'text'","默认值":"text"}]},{componentName:"TeatArea",attrContent:[{rowIndex:1,"属性":"value","说明":"输入框内容","类型":"string","默认值":""},{rowIndex:2,"属性":"placeholder","说明":"输入框占位","类型":"string","默认值":""},{rowIndex:3,"属性":"autoSize","说明":"自适应内容高度，可设置为 true | false 或对象：{ minRows: 2, maxRows: 6 }","类型":"boolean|object","默认值":"false"},{rowIndex:4,"属性":"resize","说明":"文本框是否可拉伸","类型":"boolean","默认值":"false"},{rowIndex:5,"属性":"maxlength","说明":"文本框最多字数","类型":"boolean","默认值":"false"},{rowIndex:6,"属性":"showCount","说明":"展示字数","类型":"boolean","默认值":"false"}]}];return(e,a)=>(v(),I(B,{"attr-content-arr":n,"event-content":t}))}});var L=e=>{e.__sourceCode="<template>\n  <Input v-model:value=\"value\" placeholder=\"Basic usage\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Input } from '@/lib'\n\nconst value = ref<string>('')\n<\/script>",e.__sourceTitle="基本用法"};const H=i({__name:"DemoOne",setup(e){const t=c("");return(e,n)=>(v(),I(h(s),{value:t.value,"onUpdate:value":n[0]||(n[0]=e=>t.value=e),placeholder:"Basic usage"},null,8,["value"]))}});L(H);var N=e=>{e.__sourceCode='<template>\n  <Input v-model:value="value" placeholder="Basic usage">\n    <template #prefix>\n      <SvgIcon name="user" width="1em" height="1em" />\n    </template>\n    <template #suffix>\n      <SvgIcon name="cha" width="1em" height="1em" @click="clear" />\n    </template>\n  </Input>\n</template>\n\n<script setup lang="ts">\nimport { ref } from \'vue\'\nimport { Input, SvgIcon } from \'@/lib\'\n\nconst value = ref<string>(\'\')\n\nconst clear = () => {\n  value.value = \'\'\n}\n<\/script>',e.__sourceTitle="支持input前后添加icon"};const F=i({__name:"DemoTwo",setup(e){const t=c(""),n=()=>{t.value=""};return(e,a)=>(v(),I(h(s),{value:t.value,"onUpdate:value":a[0]||(a[0]=e=>t.value=e),placeholder:"Basic usage"},{prefix:b((()=>[w(h(z),{name:"user",width:"1em",height:"1em"})])),suffix:b((()=>[w(h(z),{name:"cha",width:"1em",height:"1em",onClick:n})])),_:1},8,["value"]))}});N(F);var O=e=>{e.__sourceCode="<template>\n  <Input v-model:value=\"value\" placeholder=\"Basic usage\">\n    <template #suffix_outer>\n      <Button :style=\"{ marginLeft: '4px' }\">search</Button>\n    </template>\n  </Input>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Input, Button } from '@/lib'\n\nconst value = ref<string>('')\n<\/script>",e.__sourceTitle="输入框外添加元素"};const P=i({__name:"DemoThree",setup(e){const t=c("");return(e,n)=>(v(),I(h(s),{value:t.value,"onUpdate:value":n[0]||(n[0]=e=>t.value=e),placeholder:"Basic usage"},{suffix_outer:b((()=>[w(h(r),{style:{marginLeft:"4px"}},{default:b((()=>[y("search")])),_:1})])),_:1},8,["value"]))}});O(P);var E=e=>{e.__sourceCode='<template>\n  <Input v-model:value="value" placeholder="Basic usage">\n    <template #prefix_outer>\n      <div class="prefix">\n        <SvgIcon name="search" width="1.5em" height="1.5em" />\n      </div>\n    </template>\n    <template #suffix_outer>\n      <Button :style="{ marginLeft: \'4px\' }">search</Button>\n    </template>\n  </Input>\n</template>\n\n<script setup lang="ts">\nimport { ref } from \'vue\'\nimport { Input, Button, SvgIcon } from \'@/lib\'\n\nconst value = ref<string>(\'\')\n<\/script>\n\n<style scoped lang="scss">\n.prefix {\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  background: #67c23a;\n  border-top-left-radius: 2px;\n  border-bottom-left-radius: 2px;\n}\n</style>',e.__sourceTitle="输入框外前后添加元素"};const G={class:"prefix"},M=i({__name:"DemoFour",setup(e){const t=c("");return(e,n)=>(v(),I(h(s),{value:t.value,"onUpdate:value":n[0]||(n[0]=e=>t.value=e),placeholder:"Basic usage"},{prefix_outer:b((()=>[_("div",G,[w(h(z),{name:"search",width:"1.5em",height:"1.5em"})])])),suffix_outer:b((()=>[w(h(r),{style:{marginLeft:"4px"}},{default:b((()=>[y("search")])),_:1})])),_:1},8,["value"]))}});E(M);var q=T(M,[["__scopeId","data-v-356c901a"]]),J=e=>{e.__sourceCode="<template>\n  <Textarea\n    v-model:value=\"value\"\n    placeholder=\"Autosize height based on content lines\"\n    autoSize\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Textarea } from '@/lib'\n\nconst value = ref<string>('')\n<\/script>",e.__sourceTitle="适应文本高度的文本域"};const K=i({__name:"DemoFive",setup(e){const t=c("");return(e,n)=>(v(),I(h(D),{value:t.value,"onUpdate:value":n[0]||(n[0]=e=>t.value=e),placeholder:"Autosize height based on content lines",autoSize:""},null,8,["value"]))}});J(K);var Q=e=>{e.__sourceCode='<template>\n  <Textarea\n    v-model:value="value"\n    placeholder="Autosize height based on content lines"\n    :autoSize="{ minRows: 3, maxRows: 5 }"\n  />\n</template>\n\n<script setup lang="ts">\nimport { ref } from \'vue\'\nimport { Textarea } from \'@/lib\'\n\nconst value = ref<string>(\'\')\n<\/script>',e.__sourceTitle="设置文本最大高度和最小高度"};const V=i({__name:"DemoSix",setup(e){const t=c("");return(e,n)=>(v(),I(h(D),{value:t.value,"onUpdate:value":n[0]||(n[0]=e=>t.value=e),placeholder:"Autosize height based on content lines",autoSize:{minRows:3,maxRows:5}},null,8,["value"]))}});Q(V);var W=e=>{e.__sourceCode="<template>\n  <Textarea\n    v-model:value=\"value\"\n    placeholder=\"Autosize height based on content lines\"\n    resize\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Textarea } from '@/lib'\n\nconst value = ref<string>('')\n<\/script>",e.__sourceTitle="文本框设置可拖拉"};const X=i({__name:"DemoSeven",setup(e){const t=c("");return(e,n)=>(v(),I(h(D),{value:t.value,"onUpdate:value":n[0]||(n[0]=e=>t.value=e),placeholder:"Autosize height based on content lines",resize:""},null,8,["value"]))}});W(X);var Y=e=>{e.__sourceCode='<template>\n  <Textarea\n    v-model:value="value"\n    placeholder="Autosize height based on content lines"\n    :maxlength="20"\n    showCount\n  />\n</template>\n\n<script setup lang="ts">\nimport { ref } from \'vue\'\nimport { Textarea } from \'@/lib\'\n\nconst value = ref<string>(\'\')\n<\/script>',e.__sourceTitle="带字数提示"};const Z=i({__name:"DemoEight",setup(e){const t=c("");return(e,n)=>(v(),I(h(D),{value:t.value,"onUpdate:value":n[0]||(n[0]=e=>t.value=e),placeholder:"Autosize height based on content lines",maxlength:20,showCount:""},null,8,["value"]))}});Y(Z);var ee=e=>{e.__sourceCode='<template>\n  <Input v-model:value="value" placeholder="Basic usage" type="password" />\n</template>\n\n<script setup lang="ts">\nimport { ref } from \'vue\'\nimport { Input } from \'@/lib\'\n\nconst value = ref<string>(\'\')\n<\/script>',e.__sourceTitle="密码输入框"};const te=i({__name:"DemoNine",setup(e){const t=c("");return(e,n)=>(v(),I(h(s),{value:t.value,"onUpdate:value":n[0]||(n[0]=e=>t.value=e),placeholder:"Basic usage",type:"password"},null,8,["value"]))}});ee(te);const ne=i({__name:"Demo",setup(e){const t=m((()=>[H,F,te,P,q,K,V,X,Z].map(((e,t)=>a(e,"input",t)))));return(e,n)=>(v(),I(l,{"demo-arr":h(t)},null,8,["demo-arr"]))}}),ae=i({__name:"Index",setup(e){c(null);const t=["基本用法","支持input前后添加icon","密码输入框","输入框外添加元素","输入框外前后添加元素","适应文本高度的文本域","设置文本最大高度和最小高度","文本框设置可拖拉","带字数提示"],n=m((()=>u("input",t)));return(e,t)=>(v(),I(o,{"nav-arr":h(n),title:"Input 输入框","component-name":"input"},{intro:b((()=>[w(k)])),demo:b((()=>[w(ne)])),api:b((()=>[w($)])),_:1},8,["nav-arr"]))}});export{ae as default};
