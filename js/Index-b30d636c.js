import{_ as e,P as t,T as n,g as a,D as l,C as r,a as s}from"./DemoDisplay-56944e08.js";import{d as o,_ as c}from"./Upload.vue_vue_type_style_index_0_lang-ee73dc16.js";import{_ as u}from"./SubMenu.vue_vue_type_style_index_0_lang-b3c2de52.js";import{d as i,k as d,r as f,z as p,o as v,c as m,b as h,e as _,w as g,h as k,t as T,l as x,y as A,g as $}from"./index-e0119140.js";import{_ as b}from"./ApiIntro-5ccae423.js";import{_ as C}from"./CheckboxGroup-4f170026.js";const O={class:"ui-transfer-wrap"},w={class:"ui-transfer-source"},y={class:"transfer-source-title"},D={class:"transfer-source-content"},I={class:"transfer-action-wrap"},U={class:"transfer-actions"},j={class:"ui-transfer-source"},E={class:"transfer-source-title"},S={class:"transfer-source-content"},V=i({__name:"Transfer",props:{source:{default:()=>[]},selected:{default:()=>[]},titles:{default:()=>[]}},emits:["change","update:source","update:selected"],setup(e,{emit:t}){const n=e,{source:a,selected:l,titles:r}=d(n),s=f(!1),i=f(!1),$=f([]),b=p((()=>`${$.value.length} / ${n.source.length} 项 ${n.titles[0]}`)),V=f([]),z=p((()=>`${V.value.length} / ${n.selected.length} 项 ${n.titles[1]}`)),F=e=>{e?(a.value.forEach((e=>{e.checked=!0})),$.value=a.value):($.value=[],a.value.forEach((e=>{e.checked=!1})))},G=e=>{e?(l.value.forEach((e=>{e.checked=!0})),V.value=l.value):(l.value.forEach((e=>{e.checked=!1})),V.value=[])},M=()=>{$.value.forEach((e=>{e.checked=!1}));const e=[...$.value,...n.selected];t("update:selected",e);const a=[...n.source];for(let t=0;t<a.length;t++)for(let e=0;e<$.value.length;e++)if(a[t].value===$.value[e].value){a.splice(t,1),t>1?t-=1:t=-1;break}t("update:source",a),t("change",a,e),$.value=[],s.value&&(s.value=!1)},N=()=>{V.value.forEach((e=>{e.checked=!1}));const e=[...V.value,...n.source];t("update:source",e);const a=[...n.selected];for(let t=0;t<a.length;t++)for(let e=0;e<V.value.length;e++)if(a[t].value===V.value[e].value){a.splice(t,1),t>1?t-=1:t=-1;break}t("update:selected",a),t("change",e,a),V.value=[],i.value&&(i.value=!1)};return(e,t)=>(v(),m("div",O,[h("section",w,[h("div",y,[_(o,{checked:s.value,"onUpdate:checked":t[0]||(t[0]=e=>s.value=e),onChange:F},{default:g((()=>[k(T(x(b)),1)])),_:1},8,["checked"])]),h("div",D,[_(C,{value:$.value,"onUpdate:value":t[1]||(t[1]=e=>$.value=e),options:x(a),direction:"column"},null,8,["value","options"])])]),h("section",I,[h("div",U,[_(c,{onClick:M},{icon:g((()=>[_(u,{name:"back",width:"1em",height:"1em",style:A({transform:"rotate(180deg)"})},null,8,["style"])])),_:1}),_(c,{type:"default",onClick:N},{icon:g((()=>[_(u,{name:"back",width:"1em",height:"1em"})])),_:1})])]),h("section",j,[h("div",E,[_(o,{checked:i.value,"onUpdate:checked":t[2]||(t[2]=e=>i.value=e),onChange:G},{default:g((()=>[k(T(x(z)),1)])),_:1},8,["checked"])]),h("div",S,[_(C,{value:V.value,"onUpdate:value":t[3]||(t[3]=e=>V.value=e),options:x(l),direction:"column"},null,8,["value","options"])])])]))}}),z=h("p",null,"双栏穿梭选择框。",-1),F=h("ul",null,[h("li",null,"Transfer")],-1),G=h("ul",null,[h("li",null,"需要在多个可选项中进行多选时。"),h("li",null," 比起 Select 和 TreeSelect，穿梭框占据更大的空间，可以展示可选项的更多信息。 ")],-1),M=i({__name:"Intro",setup:a=>(a,l)=>(v(),$(x(n),null,{default:g((()=>[_(x(e),{level:4},{default:g((()=>[k("简介")])),_:1}),_(x(t),null,{default:g((()=>[z])),_:1}),_(x(e),{level:4},{default:g((()=>[k("组件概述")])),_:1}),_(x(t),null,{default:g((()=>[F])),_:1}),_(x(e),{level:4},{default:g((()=>[k("使用场景")])),_:1}),_(x(t),null,{default:g((()=>[G])),_:1})])),_:1}))}),N=i({__name:"Api",setup(e){const t=[{rowIndex:1,"事件名称":"change","说明":"选项在两栏之间转移时的回调函数","回调参数":"Function(sourceArr: TransferOptions, targetArr: TransferOptions)"}],n=[{componentName:"Transfer",attrContent:[{rowIndex:1,"属性":"source","说明":"数据源，其中的数据将会被渲染到左边一栏中","类型":"TransferOptions[]","默认值":"[]"},{rowIndex:2,"属性":"source","说明":"选中的项，其中的数据将会被渲染到右边一栏中","类型":"TransferOptions[]","默认值":"[]"},{rowIndex:3,"属性":"titles","说明":"标题集合，顺序从左至右标题集合，顺序从左至右","类型":"string[]","默认值":"[]"}]}];return(e,a)=>(v(),$(b,{"attr-content-arr":n,"event-content":t}))}});var P=e=>{e.__sourceCode="<template>\n  <Transfer\n    v-model:source=\"sourceValue\"\n    v-model:selected=\"selectedValue\"\n    :titles=\"['Source', 'Target']\"\n    @change=\"handleChange\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Transfer, TransferOptions } from '@/lib'\n\n// 模拟数据\nconst mockData: TransferOptions[] = []\nfor (let i = 0; i < 20; i++) {\n  mockData.push({\n    label: `content${i + 1}`,\n    value: `content${i + 1}`,\n    checked: false,\n    description: `description of content${i + 1}`\n  })\n}\n\nconst sourceValue = ref<TransferOptions[]>(\n  mockData.filter((item, index) => index % 2 !== 0)\n)\nconst selectedValue = ref<TransferOptions[]>(\n  mockData.filter((item, index) => index % 2 === 0)\n)\n\nconst handleChange = (sourceArr: TransferOptions, targetArr: TransferOptions) => {\n  console.log('sourceArr: ', sourceArr)\n  console.log('targetArr: ', targetArr)\n}\n<\/script>",e.__sourceTitle="基本用法"};const q=i({__name:"DemoOne",setup(e){const t=[];for(let r=0;r<20;r++)t.push({label:`content${r+1}`,value:`content${r+1}`,checked:!1,description:`description of content${r+1}`});const n=f(t.filter(((e,t)=>t%2!=0))),a=f(t.filter(((e,t)=>t%2==0))),l=(e,t)=>{console.log("sourceArr: ",e),console.log("targetArr: ",t)};return(e,t)=>(v(),$(x(V),{source:n.value,"onUpdate:source":t[0]||(t[0]=e=>n.value=e),selected:a.value,"onUpdate:selected":t[1]||(t[1]=e=>a.value=e),titles:["Source","Target"],onChange:l},null,8,["source","selected"]))}});P(q);const B=i({__name:"Demo",setup(e){const t=p((()=>[q].map(((e,t)=>a(e,"transfer",t)))));return(e,n)=>(v(),$(l,{"demo-arr":x(t)},null,8,["demo-arr"]))}}),H=i({__name:"Index",setup(e){f(null);const t=["基本用法"],n=p((()=>s("transfer",t)));return(e,t)=>(v(),$(r,{"nav-arr":x(n),title:"Transfer 穿梭框","component-name":"transfer"},{intro:g((()=>[_(M)])),demo:g((()=>[_(B)])),api:g((()=>[_(N)])),_:1},8,["nav-arr"]))}});export{H as default};
