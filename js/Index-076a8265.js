import{D as n,C as e}from"./DemoDisplay-47dba595.js";import{d as t,c as o,j as a,g as r,f as l,q as s,k as i,n as f,I as c,r as p,e as u,J as m}from"./index-8545e6ed.js";import{_ as d,P as _,T as x}from"./Paragraph-07a3368b.js";import{_ as g}from"./ApiIntro-a0df6a25.js";import{g as y,a as b}from"./helper-f6b4386b.js";import{_ as h}from"./Affix-29e46b14.js";const v=f("p",null,"将页面元素钉在可视范围。",-1),A=f("ul",null,[f("li",null,"Affix: 主要组件")],-1),B=f("ul",null,[f("li",null," 当内容区域比较长，需要滚动页面时，这部分内容对应的操作或者导航需要在滚动范围内始终展现。常用于侧边菜单和按钮组合。 "),f("li",null,"页面可视范围过小时，慎用此功能以免遮挡页面内容。")],-1),C=t({__name:"Intro",setup:n=>(n,e)=>(o(),a(s(x),null,{default:r((()=>[l(s(d),null,{default:r((()=>[i("简介")])),_:1}),l(s(_),null,{default:r((()=>[v])),_:1}),l(s(d),null,{default:r((()=>[i("组件概览")])),_:1}),l(s(_),null,{default:r((()=>[A])),_:1}),l(s(d),null,{default:r((()=>[i("使用场景")])),_:1}),l(s(_),null,{default:r((()=>[B])),_:1})])),_:1}))}),T=t({__name:"Api",setup(n){const e=[{rowIndex:1,"事件名称":"change","说明":"固定状态改变时触发的回调函数","回调参数":"(affixed?: boolean) => void"}],t=[{componentName:"Affix",attrContent:[{rowIndex:1,"属性":"offsetTop","说明":"距离窗口顶部达到指定偏移量后触发","类型":"number","默认值":"50"},{rowIndex:2,"属性":"scrollContainer","说明":"设置 Affix 需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数","类型":"() => HTMLElement","默认值":"() => window"}]}];return(n,r)=>(o(),a(g,{"attr-content-arr":t,"event-content":e}))}});var w=n=>{n.__sourceCode='<template>\n  <Affix :offsetTop="0" :scroll-container="scrollContainer">\n    <Button>距离顶部0px固定</Button>\n  </Affix>\n</template>\n\n<script setup lang="ts">\nimport { Affix, Button } from \'hut-ui\'\n\nconst scrollContainer = () => document.getElementById(\'display-container-wrap\')\n<\/script>',n.__sourceTitle=" 基本用法 "};const I=t({__name:"DemoOne",setup(n){const e=()=>document.getElementById("display-container-wrap");return(n,t)=>(o(),a(s(h),{offsetTop:0,"scroll-container":e},{default:r((()=>[l(s(c),null,{default:r((()=>[i("距离顶部0px固定")])),_:1})])),_:1}))}});w(I);var j=n=>{n.__sourceCode='<template>\n  <Affix :offsetTop="100" :scroll-container="scrollContainer" @change="onChange">\n    <Button>距离顶部100px固定</Button>\n  </Affix>\n</template>\n\n<script setup lang="ts">\nimport { Affix, Button } from \'hut-ui\'\n\nconst scrollContainer = () => document.getElementById(\'display-container-wrap\')\nconst onChange = (fixed: boolean) => {\n  console.log(fixed)\n}\n<\/script>',n.__sourceTitle=" 状态改变的回调 "};const D=t({__name:"DemoTwo",setup(n){const e=()=>document.getElementById("display-container-wrap"),t=n=>{console.log(n)};return(n,f)=>(o(),a(s(h),{offsetTop:100,"scroll-container":e,onChange:t},{default:r((()=>[l(s(c),null,{default:r((()=>[i("距离顶部100px固定")])),_:1})])),_:1}))}});j(D);var k=n=>{n.__sourceCode='<template>\n  <div\n    id="components-affix-demo-target"\n    ref="containerRef"\n    class="scrollable-container"\n  >\n    <div class="background">\n      <Affix :scroll-container="() => containerRef" :offset-top="0">\n        <Button type="primary">Fixed at the top of container</Button>\n      </Affix>\n    </div>\n  </div>\n</template>\n<script lang="ts" setup>\nimport { ref } from \'vue\'\nimport { Affix, Button } from \'@/lib\'\n\nconst containerRef = ref<HTMLElement>()\n<\/script>\n<style>\n#components-affix-demo-target.scrollable-container {\n  height: 100px;\n  overflow-y: scroll;\n}\n#components-affix-demo-target .background {\n  padding-top: 60px;\n  height: 300px;\n  background-image: url(\'https://zos.alipayobjects.com/rmsportal/RmjwQiJorKyobvI.jpg\');\n}\n</style>',n.__sourceTitle="设置滚动容器"};const E={class:"background"},R=t({__name:"DemoThree",setup(n){const e=p();return(n,t)=>(o(),u("div",{id:"components-affix-demo-target",ref_key:"containerRef",ref:e,class:"scrollable-container"},[f("div",E,[l(s(h),{"scroll-container":()=>e.value,"offset-top":0},{default:r((()=>[l(s(c),{type:"primary"},{default:r((()=>[i("Fixed at the top of container")])),_:1})])),_:1},8,["scroll-container"])])],512))}});k(R);const M=t({__name:"Demo",setup(e){const t=m((()=>[I,D,R].map(((n,e)=>y(n,"affix",e)))));return(e,r)=>(o(),a(n,{"demo-arr":s(t)},null,8,["demo-arr"]))}}),F=t({__name:"Index",setup(n){const t=["基本用法","状态改变的回调","设置滚动容器"],i=m((()=>b("affix",t)));return(n,t)=>(o(),a(e,{"nav-arr":s(i),title:"Affix 固钉","component-name":"affix"},{intro:r((()=>[l(C)])),demo:r((()=>[l(M)])),api:r((()=>[l(T)])),_:1},8,["nav-arr"]))}});export{F as default};
