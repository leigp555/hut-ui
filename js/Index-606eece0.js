import{D as e,C as a}from"./DemoDisplay-073882bc.js";import{n,c as t,e as s,m as u,C as l,d as r,i as o,g as p,f as m,q as c,j as i,r as d,t as _,ab as f,p as g,l as h,R as v}from"./index-5a408e05.js";import{_ as w,P as A,T as B}from"./Paragraph-b1131704.js";import{_ as b}from"./ApiIntro.vue_vue_type_style_index_0_lang-b0d63446.js";import{g as I,a as j}from"./helper-bad5a70b.js";import{_ as q}from"./Avatar.vue_vue_type_script_setup_true_lang-9dc25bfa.js";const y={class:"ui-badge-wrap"},x={class:"ui-badge-count"};const D=n({},[["render",function(e,a){return t(),s("div",y,[u("div",x,[l(e.$slots,"count")]),l(e.$slots,"default")])}]]),C=u("p",null,"图标右上角的圆形徽标数字。",-1),P=u("ul",null,[u("li",null,"Badge: 主要组件")],-1),T=u("ul",null,[u("li",null," 一般出现在通知图标或头像的右上角，用于显示需要处理的消息条数，通过醒目视觉形式吸引用户处理。 ")],-1),$=r({__name:"Intro",setup:e=>(e,a)=>(t(),o(c(B),null,{default:p((()=>[m(c(w),null,{default:p((()=>[i("简介")])),_:1}),m(c(A),null,{default:p((()=>[C])),_:1}),m(c(w),null,{default:p((()=>[i("组件概览")])),_:1}),m(c(A),null,{default:p((()=>[P])),_:1}),m(c(w),null,{default:p((()=>[i("使用场景")])),_:1}),m(c(A),null,{default:p((()=>[T])),_:1})])),_:1}))}),O=r({__name:"Api",setup(e){const a=[],n=[];return(e,s)=>(t(),o(b,{"attr-content-arr":n,"event-content":a}))}}),R=e=>(g("data-v-8f39f763"),e=e(),h(),e),k={class:"wrap"},z={class:"count"},E=R((()=>u("span",{class:"count"},_(0),-1))),F=R((()=>u("span",{class:"count"},_(55),-1))),G=r({__name:"DemoOne",setup(e){const a=d(100);return(e,n)=>(t(),s("div",k,[m(c(D),null,{count:p((()=>[u("span",z,_(a.value>99?"99+":a.value),1)])),default:p((()=>[m(c(q),{shape:"square"},{icon:p((()=>[m(c(f),{name:"user",width:"2em",height:"2em"})])),_:1})])),_:1}),m(c(D),null,{count:p((()=>[E])),default:p((()=>[m(c(q),{shape:"square"},{icon:p((()=>[m(c(f),{name:"user",width:"2em",height:"2em"})])),_:1})])),_:1}),m(c(D),null,{count:p((()=>[F])),default:p((()=>[m(c(q),{shape:"square"},{icon:p((()=>[m(c(f),{name:"user",width:"2em",height:"2em"})])),_:1})])),_:1})]))}}),H=e=>{e.__sourceCode='<template>\n  <div class="wrap">\n    <Badge>\n      <Avatar shape="square">\n        <template #icon>\n          <Icon_user name="user" width="2em" height="2em" />\n        </template>\n      </Avatar>\n      <template #count\n        ><span class="count">{{ count > 99 ? \'99+\' : count }}</span></template\n      >\n    </Badge>\n    <Badge>\n      <Avatar shape="square">\n        <template #icon>\n          <Icon_user name="user" width="2em" height="2em" />\n        </template>\n      </Avatar>\n      <template #count\n        ><span class="count">{{ 0 }}</span></template\n      >\n    </Badge>\n    <Badge>\n      <Avatar shape="square">\n        <template #icon>\n          <Icon_user name="user" width="2em" height="2em" />\n        </template>\n      </Avatar>\n      <template #count\n        ><span class="count">{{ 55 }}</span></template\n      >\n    </Badge>\n  </div>\n</template>\n\n<script setup lang="ts">\nimport { ref } from \'vue\'\nimport { Icon_user } from \'@hut-ui/icons-vue\'\nimport { Badge, Avatar } from \'hut-ui\'\n\nconst count = ref<number>(100)\n<\/script>\n\n<style lang="scss" scoped>\n.wrap {\n  display: flex;\n  gap: 20px;\n}\n</style>',e.__sourceTitle="基本用法"};H(G);const J=n(G,[["__scopeId","data-v-8f39f763"]]),K=r({__name:"Demo",setup(a){const n=v((()=>[J].map(((e,a)=>I(e,"badge",a)))));return(a,s)=>(t(),o(e,{"demo-arr":c(n)},null,8,["demo-arr"]))}}),L=r({__name:"Index",setup(e){d(null);const n=["基本用法"],s=v((()=>j("badge",n)));return(e,n)=>(t(),o(a,{"nav-arr":c(s),title:"Badge 徽标数","component-name":"badge"},{intro:p((()=>[m($)])),demo:p((()=>[m(K)])),api:p((()=>[m(O)])),_:1},8,["nav-arr"]))}});export{L as default};
