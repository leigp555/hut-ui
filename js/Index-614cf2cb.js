import{_ as e,P as t,T as a,g as n,D as r,C as l,a as s}from"./DemoDisplay-d14d3ff9.js";import{f as o,_ as c}from"./Paragraph.vue_vue_type_style_index_0_lang-1a82c502.js";import{d as u,k as i,r as d,z as f,o as p,c as v,b as m,e as h,w as _,h as g,t as k,l as T,A as x,y as A,g as $}from"./index-54c84176.js";/* empty css                                                */import{_ as C}from"./ApiIntro-50aaf7d6.js";import{_ as O}from"./CheckboxGroup-36e21d09.js";const b={class:"ui-transfer-wrap"},w={class:"ui-transfer-source"},y={class:"transfer-source-title"},D={class:"transfer-source-content"},I={class:"transfer-action-wrap"},j={class:"transfer-actions"},E={class:"ui-transfer-source"},U={class:"transfer-source-title"},S={class:"transfer-source-content"},V=u({__name:"Transfer",props:{source:{default:()=>[]},selected:{default:()=>[]},titles:{default:()=>[]}},emits:["change","update:source","update:selected"],setup(e,{emit:t}){const a=e,{source:n,selected:r,titles:l}=i(a),s=d(!1),u=d(!1),$=d([]),C=f((()=>`${$.value.length} / ${a.source.length} 项 ${a.titles[0]}`)),V=d([]),P=f((()=>`${V.value.length} / ${a.selected.length} 项 ${a.titles[1]}`)),z=e=>{e?(n.value.forEach((e=>{e.checked=!0})),$.value=n.value):($.value=[],n.value.forEach((e=>{e.checked=!1})))},F=e=>{e?(r.value.forEach((e=>{e.checked=!0})),V.value=r.value):(r.value.forEach((e=>{e.checked=!1})),V.value=[])},G=()=>{$.value.forEach((e=>{e.checked=!1}));const e=[...$.value,...a.selected];t("update:selected",e);const n=[...a.source];for(let t=0;t<n.length;t++)for(let e=0;e<$.value.length;e++)if(n[t].value===$.value[e].value){n.splice(t,1),t>1?t-=1:t=-1;break}t("update:source",n),t("change",n,e),$.value=[],s.value&&(s.value=!1)},M=()=>{V.value.forEach((e=>{e.checked=!1}));const e=[...V.value,...a.source];t("update:source",e);const n=[...a.selected];for(let t=0;t<n.length;t++)for(let e=0;e<V.value.length;e++)if(n[t].value===V.value[e].value){n.splice(t,1),t>1?t-=1:t=-1;break}t("update:selected",n),t("change",e,n),V.value=[],u.value&&(u.value=!1)};return(e,t)=>(p(),v("div",b,[m("section",w,[m("div",y,[h(o,{checked:s.value,"onUpdate:checked":t[0]||(t[0]=e=>s.value=e),onChange:z},{default:_((()=>[g(k(T(C)),1)])),_:1},8,["checked"])]),m("div",D,[h(O,{value:$.value,"onUpdate:value":t[1]||(t[1]=e=>$.value=e),options:T(n),direction:"column"},null,8,["value","options"])])]),m("section",I,[m("div",j,[h(c,{onClick:G},{icon:_((()=>[h(x,{name:"back",width:"1em",height:"1em",style:A({transform:"rotate(180deg)"})},null,8,["style"])])),_:1}),h(c,{type:"default",onClick:M},{icon:_((()=>[h(x,{name:"back",width:"1em",height:"1em"})])),_:1})])]),m("section",E,[m("div",U,[h(o,{checked:u.value,"onUpdate:checked":t[2]||(t[2]=e=>u.value=e),onChange:F},{default:_((()=>[g(k(T(P)),1)])),_:1},8,["checked"])]),m("div",S,[h(O,{value:V.value,"onUpdate:value":t[3]||(t[3]=e=>V.value=e),options:T(r),direction:"column"},null,8,["value","options"])])])]))}}),P=m("p",null,"双栏穿梭选择框。",-1),z=m("ul",null,[m("li",null,"Transfer")],-1),F=m("ul",null,[m("li",null,"需要在多个可选项中进行多选时。"),m("li",null," 比起 Select 和 TreeSelect，穿梭框占据更大的空间，可以展示可选项的更多信息。 ")],-1),G=u({__name:"Intro",setup:n=>(n,r)=>(p(),$(T(a),null,{default:_((()=>[h(T(e),{level:4},{default:_((()=>[g("简介")])),_:1}),h(T(t),null,{default:_((()=>[P])),_:1}),h(T(e),{level:4},{default:_((()=>[g("组件概述")])),_:1}),h(T(t),null,{default:_((()=>[z])),_:1}),h(T(e),{level:4},{default:_((()=>[g("使用场景")])),_:1}),h(T(t),null,{default:_((()=>[F])),_:1})])),_:1}))}),M=u({__name:"Api",setup(e){const t=[{rowIndex:1,"事件名称":"change","说明":"选项在两栏之间转移时的回调函数","回调参数":"Function(sourceArr: TransferOptions, targetArr: TransferOptions)"}],a=[{componentName:"Transfer",attrContent:[{rowIndex:1,"属性":"source","说明":"数据源，其中的数据将会被渲染到左边一栏中","类型":"TransferOptions[]","默认值":"[]"},{rowIndex:2,"属性":"source","说明":"选中的项，其中的数据将会被渲染到右边一栏中","类型":"TransferOptions[]","默认值":"[]"},{rowIndex:3,"属性":"titles","说明":"标题集合，顺序从左至右标题集合，顺序从左至右","类型":"string[]","默认值":"[]"}]}];return(e,n)=>(p(),$(C,{"attr-content-arr":a,"event-content":t}))}});var N=e=>{e.__sourceCode="<template>\n  <Transfer\n    v-model:source=\"sourceValue\"\n    v-model:selected=\"selectedValue\"\n    :titles=\"['Source', 'Target']\"\n    @change=\"handleChange\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Transfer, TransferOptions } from '@/lib'\n\n// 模拟数据\nconst mockData: TransferOptions[] = []\nfor (let i = 0; i < 20; i++) {\n  mockData.push({\n    label: `content${i + 1}`,\n    value: `content${i + 1}`,\n    checked: false,\n    description: `description of content${i + 1}`\n  })\n}\n\nconst sourceValue = ref<TransferOptions[]>(\n  mockData.filter((item, index) => index % 2 !== 0)\n)\nconst selectedValue = ref<TransferOptions[]>(\n  mockData.filter((item, index) => index % 2 === 0)\n)\n\nconst handleChange = (sourceArr: TransferOptions, targetArr: TransferOptions) => {\n  console.log('sourceArr: ', sourceArr)\n  console.log('targetArr: ', targetArr)\n}\n<\/script>",e.__sourceTitle="基本用法"};const q=u({__name:"DemoOne",setup(e){const t=[];for(let l=0;l<20;l++)t.push({label:`content${l+1}`,value:`content${l+1}`,checked:!1,description:`description of content${l+1}`});const a=d(t.filter(((e,t)=>t%2!=0))),n=d(t.filter(((e,t)=>t%2==0))),r=(e,t)=>{console.log("sourceArr: ",e),console.log("targetArr: ",t)};return(e,t)=>(p(),$(T(V),{source:a.value,"onUpdate:source":t[0]||(t[0]=e=>a.value=e),selected:n.value,"onUpdate:selected":t[1]||(t[1]=e=>n.value=e),titles:["Source","Target"],onChange:r},null,8,["source","selected"]))}});N(q);const B=u({__name:"Demo",setup(e){const t=f((()=>[q].map(((e,t)=>n(e,"transfer",t)))));return(e,a)=>(p(),$(r,{"demo-arr":T(t)},null,8,["demo-arr"]))}}),H=u({__name:"Index",setup(e){d(null);const t=["基本用法"],a=f((()=>s("transfer",t)));return(e,t)=>(p(),$(l,{"nav-arr":T(a),title:"Transfer 穿梭框","component-name":"transfer"},{intro:_((()=>[h(G)])),demo:_((()=>[h(B)])),api:_((()=>[h(M)])),_:1},8,["nav-arr"]))}});export{H as default};
